name: Deploy to GitHub Pages

# main ブランチ の push 時にこのワークフローを実行する
on:
 push:
   branches:
     - main

jobs:
 build:
   runs-on: ubuntu-20.04

   steps:
     # main ブランチを取得する
     - name: Checkout
       uses: actions/checkout@v2

     # Node.js のセットアップをする
     - name: Setup Node
       uses: actions/setup-node@v2
       with:
         node-version: 14.x
         cache: yarn

     # パッケージをインストールする
     - name: Install dependencies
       run: yarn --frozen-lockfile

     # ビルドする
     - name: Build
       run: yarn build

     # GitHub Pages にデプロイする
     - name: Deploy
       uses: peaceiris/actions-gh-pages@v3
       with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
         publish_dir: out

# name: github pages

# # masterブランチにプッシュしたときjobsに記述した操作を行う
# on:
#   push:
#     branches:
#     - master

# jobs:
#   build-deploy:
#     # ubuntu OS を仮想マシン上に用意する
#     runs-on: ubuntu-18.04
#     steps:
#     - uses: actions/checkout@v2

#     # Node.js環境のセットアップを行う
#     - name: setup node
#       uses: actions/setup-node@v1
#       with:
#         node-version: '12.x'

#     # npm install の際にキャッシュを使うよう設定
#     - name: Cache dependencies
#       uses: actions/cache@v1
#       with:
#         path: ~/.npm
#         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#         restore-keys: |
#           ${{ runner.os }}-node-

#     # package.jsonに基づき依存パッケージをインストールする
#     - name: install
#       run: npm install --frozen-lockfile

#     # Next.jsアプリをビルドする
#     # プロジェクトルート直下に.nextディレクトリができる
#     - name: build
#       run: npm run build

#     # 静的なHTMLとしてNext.jsアプリを生成する
#     # プロジェクトルート直下にoutディレクトリができる
#     # そのなかに、HTMLファイル群と、それらが読み込むJSファイル群を収めた_nextディレクトリがある
#     - name: export
#       run: npm run export

#     # しかしGitHub Pagesの仕様として_から始まるディレクトリが見えず404となる
#     # つまりHTMLからJSを読み込めない
#     # これを回避するために.nojekyllファイルをoutディレクトリに作る
#     - name: add nojekyll
#       run: touch ./out/.nojekyll

#     # gh-pagesブランチにoutディレクトリの中身をプッシュする
#     # gh-pagesブランチは自動的に作成される
#     - name: deploy
#       uses: peaceiris/actions-gh-pages@v3
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         publish_dir: ./out
